<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings xmlns="https://jakarta.ee/xml/ns/persistence/orm"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="https://jakarta.ee/xml/ns/persistence/orm https://jakarta.ee/xml/ns/persistence/orm/orm_3_0.xsd"
                 version="3.0">
    <named-query name="UserEntity.findByIdWithFriends">
        <query>
            SELECT user
            FROM UserEntity AS user
                LEFT JOIN FETCH user.friends
            WHERE user.id = :id
        </query>
    </named-query>
    <named-native-query name="UserEntity.findCommonFriends" result-class="com.example.application.persistence.model.UserEntity">
        <query>
            SELECT *
            FROM users
            WHERE id IN (
                SELECT receiving_user_id
                FROM friendship
                WHERE requesting_user_id = :id
                INTERSECT
                SELECT receiving_user_id
                FROM friendship
                WHERE requesting_user_id = :otherUserId
            );
        </query>
    </named-native-query>
    <named-native-query name="UserEntity.findRelevantUserIds">
        <query>
            SELECT user_id
            FROM (
                SELECT user_id, max(count)
                FROM (
                    SELECT user_id, count(film_id) AS count
                    FROM film_likes
                    WHERE film_id IN (
                        SELECT film_id
                        FROM film_likes
                        WHERE user_id = :id
                    ) AND user_id &lt;&gt; :id
                    GROUP BY user_id
                )
                GROUP BY user_id
            );
        </query>
    </named-native-query>
</entity-mappings>
